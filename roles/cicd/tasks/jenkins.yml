- name : add jenkis repo
  ansible.builtin.yum_repository:
    name : jenkins-stable
    description: jenkins repo
    baseurl: http://pkg.jenkins.io/redhat-stable
    gpgcheck : true

- name: Import Jenkins GPG key using rpm_key module
  ansible.builtin.rpm_key:
    state: present
    key: https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
  become: true

- name : Install pkg
  ansible.builtin.yum:
    name : "{{ item }}"
    state : present
  loop : 
    - fontconfig
    - java-17-openjdk
    - jenkins

- name : start service jenkins
  ansible.builtin.service:
    name : jenkins
    state : started
    enabled : true

- name: get init jenkins password
  slurp:
    src: /var/lib/jenkins/secrets/initialAdminPassword
  register: jenkins_password

- name: cnffur
  debug:
    msg: "Jenkins init password: {{ jenkins_password.content | b64decode }}"


- name: Jenkins CLI jar 다운로드
  get_url:
    url: "http://localhost:8080/jnlpJars/jenkins-cli.jar"
    dest: "/tmp/jenkins-cli.jar"
    mode: '0755'
  retries: 10
  delay: 10

- name: Jenkins 초기 설정 파일 생성
  copy:
    content: |
      jenkins:
        securityRealm:
          local:
            allowsSignup: false
            users:
              - id: "admin"
                password: "{{ jenkins_password.content | b64decode }}"
    dest: /var/lib/jenkins/jenkins.yaml
    owner: jenkins
    group: jenkins
    mode: '0644'

- name: Jenkins 초기 설정 건너뛰기
  copy:
    content: "2.0"
    dest: /var/lib/jenkins/jenkins.install.InstallUtil.lastExecVersion
    owner: jenkins
    group: jenkins
    mode: '0644'

- name: Jenkins 재시작
  service:
    name: jenkins
    state: restarted

- name: Jenkins 시작 대기
  wait_for:
    port: 8080
    delay: 10
    timeout: 300


- name: intsall plugin
  command: >
    java -jar /tmp/jenkins-cli.jar 
    -s http://localhost:8080/ 
    -auth admin:{{ jenkins_password.content | b64decode }} 
    install-plugin {{ item }} -deploy
  loop:
    - git
    - workflow-aggregator
    - pipeline-stage-view
    - blueocean
  notify: restart jenkins

# ../handlers/main.yml


#- name : Get init Jenkins password
#  ansible.builtin.slurp:
#    src: /var/lib/jenkins/secrets/initialAdminPassword
#  register : jenkins_init_password

# git repository
- name: Create repository dir 
  file:
    path: /home/ansible/project.git
    state: directory
    mode: '0755'
    owner: ansible
    group: ansible

- name: Git 베어 저장소 초기화
  command: git init --bare
  args:
    chdir: /home/ansible/project.git
  become_user: ansible


- name: Jenkins 파이프라인 job 생성
  copy:
    content: |
      <?xml version='1.0' encoding='UTF-8'?>
      <flow-definition plugin="workflow-job">
        <description>로컬 Git 저장소를 사용하는 파이프라인</description>
        <keepDependencies>false</keepDependencies>
        <properties/>
        <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps">
          <script>
            pipeline {
                agent any
                stages {
                    stage('Checkout') {
                        steps {
                            git url: 'file:///home/ansible/project.git'
                        }
                    }
                    stage('Build') {
                        steps {
                            sh 'echo "빌드 단계"'
                        }
                    }
                    stage('Test') {
                        steps {
                            sh 'echo "테스트 단계"'
                        }
                    }
                    stage('Deploy') {
                        steps {
                            sh 'echo "배포 단계"'
                        }
                    }
                }
            }
          </script>
          <sandbox>true</sandbox>
        </definition>
        <triggers/>
        <disabled>false</disabled>
      </flow-definition>
    dest: /tmp/pipeline_job.xml

- name: Jenkins 파이프라인 XML 생성
  copy:
    content: |
      <?xml version='1.0' encoding='UTF-8'?>
      <flow-definition plugin="workflow-job">
        <description>로컬 Git 저장소를 사용하는 파이프라인</description>
        <keepDependencies>false</keepDependencies>
        <properties/>
        <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps">
          <script>
            pipeline {
                agent any
                stages {
                    stage('Checkout') {
                        steps {
                            git url: 'file:///home/ansible/project.git'
                        }
                    }
                    stage('Build') {
                        steps {
                            sh 'echo "빌드 단계"'
                        }
                    }
                    stage('Test') {
                        steps {
                            sh 'echo "테스트 단계"'
                        }
                    }
                    stage('Deploy') {
                        steps {
                            sh 'echo "배포 단계"'
                        }
                    }
                }
            }
          </script>
          <sandbox>true</sandbox>
        </definition>
        <triggers/>
        <disabled>false</disabled>
      </flow-definition>
    dest: "/tmp/pipeline_job.xml"
    mode: '0644'
  register: xml_file

- name: Jenkins 파이프라인 생성
  command: >
    java -jar /tmp/jenkins-cli.jar -s http://localhost:8080/ 
    -auth admin:{{ jenkins_password.content | b64decode }}
    create-job my-pipeline
  args:
    stdin: "{{ lookup('file', '/tmp/pipeline_job.xml') }}"
  when: xml_file is changed
