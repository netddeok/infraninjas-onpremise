global:
  scrape_interval: 15s
  evaluation_interval: 15s

# Alertmanager 설정
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - "localhost:9093"  # http:// 제거, 프로토콜은 자동으로 처리됨

# 규칙 파일 설정
rule_files:
  - "/etc/prometheus/rules/alert_rules.yml"

# 스크래핑 설정
scrape_configs:
  # Prometheus 자체 모니터링
  - job_name: "prometheus"
    static_configs:
      - targets: 
        - "localhost:9090"

  # Alertmanager 모니터링
  - job_name: "alertmanager"
    static_configs:
      - targets: 
        - "localhost:9093"

#  - job_name : "cluster monitoring"
#    static_configs:
#      - targets:
#        - "control-plane.infraninjas.local"
#        - "node1.infraninjas.local"
#        - "node2.infraninjas.local"

  - job_name: 'ping all computers'
    metrics_path: /probe
    params:
      module: [icmp]  # ICMP 핑을 사용
    static_configs:
      - targets:
        - "router1"
        - "prometheus"
        - "grafana"
        - "jenkins"
        - "ansible"
        - "dev"
        - "waf"
        - "lb"
        - "node1"
        - "node2"
        - "control-plane"
        - "dbproxy"
        - "db1"
        - "db2"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: localhost:9115  # blackbox_exporter 주소

# kubelet 모니터링
#  - job_name: 'is_game_alive'
#    scheme: 'http'  # 기본적으로 kubelet은 HTTPS를 사용 (HTTP를 사용하는 경우 http로 설정)
#    metrics_path: '/metrics'
#    static_configs:
#      - targets:
#        - '192.168.20.30:30080'  # 첫 번째 노드의 IP와 포트
#        - '192.168.20.40:30080'  # 두 번째 노드의 IP와 포트  

# node-exporter 모니터링
#  - job_name: 'node-exporter'
#    static_configs:
#      - targets:
#        - 'control-plane.infraninjas.local:9100'
#        - 'node1.infraninjas.local:9100'
#        - 'node2.infraninjas.local:9100'

## kube-state-metrics 모니터링 (수정된 부분)
#  - job_name: 'kube-state-metrics'
#    kubernetes_sd_configs:
#      - role: service
#    relabel_configs:
#      - source_labels: [__meta_kubernetes_service_name]
#        action: keep
#        regex: kube-state-metrics
#      - source_labels: [__meta_kubernetes_namespace]
#        action: keep
#        regex: kube-system
#    metrics_path: /metrics
#    relabel_configs:
#      - source_labels: [__address__]
#        target_label: instance
#
