---
## Node Exporter 설정
#- name: download node exporter and unarchive
#  ansible.builtin.unarchive:
#    src: https://github.com/prometheus/node_exporter/releases/download/v1.9.0/node_exporter-1.9.0.linux-amd64.tar.gz
#    dest: /home/ansible/
#    remote_src: true

#- name: Move node_exporter binary
#  shell: "mv /home/ansible/node_exporter-1.9.0.linux-amd64/node_exporter /usr/local/bin/"

#- name: Create node_exporter systemd service
#  copy:
#    dest: /etc/systemd/system/node_exporter.service
#    content: |
#      [Unit]
#      Description=Node Exporter
#      After=network.target
#      
#      [Service]
#      Type=simple
#      User=prometheus
#      Group=prometheus
#      ExecStart=/usr/local/bin/node_exporter
#      
#      [Install]
#      WantedBy=multi-user.target


# Alertmanager 설정
- name: download alert manager and unarchive
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/alertmanager/releases/download/v0.28.1/alertmanager-0.28.1.linux-amd64.tar.gz
    dest: /home/ansible/
    remote_src: true

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: '0755'
  with_items:
    - /etc/alertmanager
    - /var/lib/alertmanager

- name : move alertmanager binary
  shell: "mv /home/ansible/alertmanager-0.28.1.linux-amd64/alertmanager /usr/local/bin/alertmanager"


- name: Configure Alertmanager from template
  ansible.builtin.template:
    src: alertmanager.yml.j2  # 템플릿 경로
    dest: /etc/alertmanager/alertmanager.yml  # 템플릿이 렌더링될 대상 경로
    owner: prometheus
    group: prometheus
    mode: '0644'

- name: deploy template alert_rules.yml
  ansible.builtin.template:
    src: /home/ansible/project/roles/monitoring/templates/alert_rules.yml.j2
    dest: /etc/prometheus/rules/alert_rules.yml
    owner: prometheus
    group: prometheus
    mode: 0644

- name: Create alertmanager systemd service
  copy:
    dest: /etc/systemd/system/alertmanager.service
    content: |
      [Unit]
      Description=Alertmanager
      After=network.target

      [Service]
      Type=simple
      User=prometheus
      Group=prometheus
      ExecStart=/usr/local/bin/alertmanager \
        --config.file=/etc/alertmanager/alertmanager.yml \
        --storage.path=/var/lib/alertmanager

      [Install]
      WantedBy=multi-user.target



- name: download black exporter and unarchive
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/blackbox_exporter/releases/download/v0.26.0/blackbox_exporter-0.26.0.linux-amd64.tar.gz
    dest: /home/ansible/
    remote_src: true

- name : create blackbox config file
  file : 
    path : /etc/blackbox_exporter
    state : directory
    owner: prometheus
    group: prometheus
    mode : '0755'

- name: Deploy blackbox.yml.j2 template
  ansible.builtin.template:
    src: blackbox.yml.j2
    dest: /etc/blackbox_exporter/blackbox.yml


- name : move blackbox_exporter binary to /usr/local/bin
  shell : "mv /home/ansible/blackbox_exporter-0.26.0.linux-amd64/blackbox_exporter /usr/local/bin"

- name: Create blackbox_exporter systemd service
  ansible.builtin.copy:
    dest: /etc/systemd/system/blackbox_exporter.service
    content: |
      [Unit]
      Description=Blackbox Exporter
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=prometheus
      ExecStart=/usr/local/bin/blackbox_exporter --config.file=/etc/blackbox_exporter/blackbox.yml
      Restart=on-failure

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd to apply changes
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - node_exporter
    - alertmanager
    - blackbox_exporter



