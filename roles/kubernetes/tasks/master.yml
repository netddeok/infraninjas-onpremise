#---
#- name: Add k8s repo
#  ansible.builtin.yum_repository:
#    name: kubernetes
#    description: Kubernetes repository
#    baseurl: https://pkgs.k8s.io/core:/stable:/v1.32/rpm/
#    enabled: yes
#    gpgcheck: yes
#    gpgkey: https://pkgs.k8s.io/core:/stable:/v1.32/rpm/repodata/repomd.xml.key
#
#- name : Add containerd repo
#  ansible.builtin.command:
#    cmd: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
#  become: yes
#
#- name: Install k8s packages
#  ansible.builtin.yum:
#    name: "{{ item }}"
#    state: latest
#  loop:
#    - yum-utils
#    - kubelet
#    - kubeadm
#    - kubectl
#
#
#- name : Install containerd pkg
#  ansible.builtin.yum:
#    name : containerd.io
#    state : latest
#
## CONTAINERD 
#- name : Cretae containerd config dir
#  ansible.builtin.file:
#    path: /etc/containerd
#    state: directory
#
#- name : Generate default containerd config
#  ansible.builtin.command:
#    cmd: containerd config default > /etc/containerd/config.toml
#    creates: /etc/containerd/config.toml
#
#- name: Update containerd config for systemd cgroup driver
#  ansible.builtin.replace:
#    path: /etc/containerd/config.toml
#    regexp: 'SystemdCgroup = false'
#    replace: 'SystemdCgroup = true'
#
#- name: Comment out disabled_plugins line in containerd config
#  ansible.builtin.replace:
#    path: /etc/containerd/config.toml
#    regexp: '^disabled_plugins(\s*)=(\s*)\["cri"\]'
#    replace: '#disabled_plugins\1=\2["cri"]'
#
#- name: Start and enable containerd service
#  ansible.builtin.service:
#    name: containerd
#    state: started
#    enabled: yes
#################################
#
#- name: Enable kubelet service
#  ansible.builtin.service:
#    name: kubelet
#    enabled: yes
#    state: restarted
#
#- name : disable swap
#  ansible.builtin.command:
#    cmd : swapoff -a
#
##- name : remove swap from fstab
##  ansible.builtin.replace:
##    path : /etc/fstab
##    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
##    replace: '# \1'
##
#- name: Remove swap from fstab
#  ansible.builtin.replace:
#    path: /etc/fstab
#    regexp: '^/dev/mapper/cs-swap.*swap.*'
#    replace: '# /dev/mapper/cs-swap     none                    swap    defaults        0 0'
#
#
#
#- name: Load kernel modules
#  ansible.builtin.copy:
#    content: |
#      overlay
#      br_netfilter
#    dest: /etc/modules-load.d/k8s.conf
#
#- name: Load br_netfilter module
#  ansible.builtin.modprobe:
#    name: br_netfilter
#    state: present
#
#- name: Set kernel parameters
#  ansible.builtin.sysctl:
#    name: "{{ item.name }}"
#    value: "{{ item.value }}"
#    state: present
#    reload: yes
#  loop:
#    - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
#    - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
#    - { name: 'net.ipv4.ip_forward', value: '1' }
#
#
#- name: Initialize Kubernetes cluster
#  ansible.builtin.command:
#    cmd: kubeadm init --pod-network-cidr=10.0.0.0/16
#  register: kubeadm_init
#  ignore_errors: true
#
#- name: Create .kube directory for root user
#  ansible.builtin.file:
#    path: /root/.kube
#    state: directory
#    mode: '0755'
#
#- name: Copy kube config for root user
#  ansible.builtin.copy:
#    src: /etc/kubernetes/admin.conf
#    dest: /root/.kube/config
#    remote_src: yes
#    mode: '0644'
#
#- name: Install Calico CNI
#  ansible.builtin.command:
#    cmd: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml
#  register: calico_result
#  ignore_errors: true
#
#- name : Generate kubeadm join command
#  ansible.builtin.command:
#    cmd : kubeadm token create --print-join-command
#  register: kubeadm_join_command
#
#- name : save join command to a file
#  ansible.builtin.copy:
#    content: "{{ kubeadm_join_command.stdout }}"
#    dest: /tmp/kubeadm_join.sh
#
#- name : 
#  ansible.builtin.fetch:
#    src: /tmp/kubeadm_join.sh
#    dest: /tmp/kubeadm_join.sh
#    flat: true
#
#
#
---
# kubeadm, kubelet, kubectl 설치
- name: Install Kubernetes packages for master
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Enable and start kubelet
  service:
    name: kubelet
    state: restarted
    enabled: yes

- name: Initialize Kubernetes cluster
  command: >
    kubeadm init 
    --pod-network-cidr=10.244.0.0/16
    --apiserver-advertise-address={{ ansible_default_ipv4.address }}
  register: kubeadm_init
  changed_when: false

- name: Create .kube directory
  file:
    path: /root/.kube
    state: directory
    mode: '0755'

- name: Copy admin.conf to root's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    mode: '0600'

# KUBECONFIG 환경변수 설정
- name: Set KUBECONFIG environment variable
  lineinfile:
    path: /root/.bashrc
    line: 'export KUBECONFIG=/etc/kubernetes/admin.conf'
    state: present

# Calico CNI 설치
- name : Install Calico CNI
  ansible.builtin.command:
#    cmd : kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
    cmd : kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

#- name: Install Calico operator
#  command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/tigera-operator.yaml
#  changed_when: false
#  ignore_errors: yes

#- name: Install Calico custom resources
#  command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/custom-resources.yaml
#  changed_when: false
#  ignore_errors: yes

# 조인 명령어 생성
- name: Get join command
  command: kubeadm token create --print-join-command
  register: join_command

- name: Save join command to file
  copy:
    content: "{{ join_command.stdout }}"
    dest: /tmp/join.sh
    mode: '0755'

#- name : fetch join cmd file
#  ansible.builtin.fetch:
#    src: /tmp/join.sh
#    dest: /home/ansible/join.sh
#    flat: true
#
#- name: synchronize join.sh to worker
#  ansible.builtin.synchronize:
#    src: /tmp/join.sh
#    dest: /home/ansible/join.sh
#    mode: push
#  delegate_to: node1

- name : fetch join cmd file
  ansible.builtin.fetch:
    src: /tmp/join.sh
    dest: /home/ansible/join.sh
    flat: true

- name: Enable kubectl autocomplete
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    line: "source <(kubectl completion bash)"
    state: present

